- become: true
  vars:
    le_dir: /opt/letsencrypt
  block:

    - name: Install (Debian)
      when: ansible_os_family == "Debian"
      apt: name=nginx state=latest

    - when: ansible_os_family == "RedHat"
      block:

        - name: Install (Amazon)
          when: ansible_distribution == "Amazon"
          command:
            cmd: amazon-linux-extras install -y nginx1=latest
            creates: /usr/sbin/nginx

        - name: Install (RedHat)
          when: ansible_distribution != "Amazon"
          yum: name=nginx state=latest

    - name: Install config
      copy:
        src: nginx.conf
        dest: /etc/nginx/nginx.conf
        checksum: d643f52b0c42bd950c33503d2a14e819d2f7bd87
      notify: reload nginx

    - name: Generate Diffie-Hellman parameters
      openssl_dhparam: size=4096 path=/etc/ssl/certs/dhparam.pem

    - name: Install SSL config
      template: src=ssl.conf.j2 dest=/etc/nginx/ssl.conf
      notify: reload nginx

    - name: Enable service
      systemd: name=nginx enabled=true state=started

    - name: Create Lets Encrypt working directory
      file: path='{{ le_dir }}' state=directory

    - name: Create Lets Encrypt webroot directory
      file: path='/usr/share/nginx/letsencrypt' state=directory

    - name: Install Lets Encrypt command script
      template: src=le-cmd dest='{{ le_dir }}/le-cmd' mode=0775

    # TODO: don't pip install docker in install.sh, do it in the playbook
    - name: Install dependencies for ansible docker modules
      pip:
        name:
          - docker

    - name: Check if Lets Encrypt certificate already exists
      stat: path='/etc/letsencrypt/live/{{ domain_name }}' get_checksum=false get_mime=false
      register: le_cert

    - when: le_cert.stat.exists == false
      block:

        - name: Get test certificate from Lets Encrypt
          command:
            cmd: '{{ le_dir }}/le-cmd cert-get --staging'
            creates: '/etc/letsencrypt/live/{{ domain_name }}'

        - name: Revoke and delete test certificate
          command:
            cmd: '{{ le_dir }}/le-cmd cert-revoke --staging'
            removes: '/etc/letsencrypt/live/{{ domain_name }}'

        - name: Get certificate from Lets Encrypt
          command:
            cmd: '{{ le_dir }}/le-cmd cert-get'
            creates: '/etc/letsencrypt/live/{{ domain_name }}'

    - name: Install cron job to renew the Lets Encrypt certificate
      cron:
        name: renew Lets Encrypt certificate
        user: root
        minute: '0'
        hour: '23'
        job: '{{ le_dir }}/le-cmd cert-renew'
