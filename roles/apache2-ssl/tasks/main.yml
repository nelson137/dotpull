- name: Create challenge container directory
  become: true
  file: path=/docker/letsencrypt state=directory

- name: Copy docker-compose definition for challenge container
  become: true
  copy: src=docker-compose.yml dest=/docker/letsencrypt/docker-compose.yml

- name: Copy nginx config for challenge
  become: true
  template: src=nginx.conf.j2 dest=/docker/letsencrypt/nginx.conf

- name: Copy LetsEncrypt command script
  become: true
  copy: src=le-cmd dest=/docker/letsencrypt/le-cmd mode=0775

- name: Install dependencies for ansible docker modules
  become: true
  pip:
    name:
      - docker
      - docker-compose

- name: Check if LetsEncrypt certificate already exists
  become: true
  stat: path='/etc/letsencrypt/live/{{ domain_name }}' get_checksum=false get_mime=false
  register: le_cert

- when: le_cert.stat.exists == false
  become: true
  block:
    - name: Stop apache2 service
      service: name=apache2 state=stopped

    - name: Start LetsEncrypt challenge container
      docker_compose: project_src=/docker/letsencrypt

    - name: Get test LetsEncrypt certificate
      command:
        cmd: /docker/letsencrypt/le-cmd '{{ domain_name }}' cert-get --staging
        creates: "/etc/letsencrypt/live/{{ domain_name }}"

    - name: Revoke and delete test LetsEncrypt certificate
      command:
        cmd: /docker/letsencrypt/le-cmd '{{ domain_name }}' cert-revoke --staging
        removes: '/etc/letsencrypt/live/{{ domain_name }}'

    - name: Get LetsEncrypt certificate
      command:
        cmd: /docker/letsencrypt/le-cmd '{{ domain_name }}' cert-get
        creates: '/etc/letsencrypt/live/{{ domain_name }}'

    - name: Stop and remove LetsEncrypt challenge container
      docker_compose: project_src=/docker/letsencrypt state=absent

    - name: Start apache2 service
      service: name=apache2 state=started

- name: Install cron job to renew the certificate
  become: true
  cron:
    name: renew LetsEncrypt certificate
    user: root
    minute: '0'
    hour: '23'
    job: /docker/letsencrypt/le-cmd '{{ domain_name }}' cert-renew

- name: Disable apache ServerToken
  become: true
  lineinfile:
    path: /etc/apache2/conf-available/security.conf
    regexp: '^ServerTokens .*'
    line: ServerTokens ProductOnly

- name: Generate Diffie-Hellman parameters
  become: true
  openssl_dhparam: size=4096 path=/etc/ssl/certs/dhparam.pem

- name: Enable apache modules
  become: true
  apache2_module:
    name: "{{ item }}"
  loop:
    - headers
    - rewrite
    - ssl
  notify: restart apache2

- name: Disable default SSL config
  become: true
  command:
    cmd: a2ensite default-ssl
    removes: /etc/apache2/sites-enabled/default-ssl.conf
  notify: restart apache2

- name: Remove default SSL config
  become: true
  file: path=/etc/apache2/sites-available/default-ssl.conf state=absent
  notify: restart apache2

- name: Copy SSL options config
  become: true
  template:
    src: ssl-options.conf.j2
    dest: /etc/apache2/ssl-options.conf
  notify: restart apache2

- name: Copy default site config
  become: true
  template: src=000-default.conf.j2 dest=/etc/apache2/sites-available/000-default.conf
  notify: restart apache2
