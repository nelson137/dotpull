- become: true
  vars:
    nextcloud_db: nextcloud
    nextcloud_db_user: nextcloud
    nextcloud_db_pass: '{{ lookup("random_string", length=16, special=False) }}'
    nextcloud_admin_user: admin
    nextcloud_admin_pass: '{{ lookup("random_string", length=16, special=False) }}'
  block:

    - name: Add Ondrej's PHP PPA
      apt_repository: repo='ppa:ondrej/php'

    - name: Install PHP and modules
      apt:
        state: latest
        name:
          - acl
          - bzip2
          - ffmpeg
          - gpg
          - libxml2
          - mariadb-server
          - php8.2
          - php8.2-apcu
          - php8.2-bcmath
          - php8.2-bz2
          - php8.2-curl
          - php8.2-fileinfo
          - php8.2-fpm
          - php8.2-gd
          - php8.2-gmp
          - php8.2-gmp
          - php8.2-imagick
          - php8.2-intl
          - php8.2-mbstring
          - php8.2-mysql
          - php8.2-xml
          - php8.2-zip

    - when: ansible_os_family == 'Debian'
      block:

        - name: Configure MariaDB bind address (Debian)
          lineinfile:
            path: /etc/mysql/mariadb.conf.d/50-server.cnf
            backrefs: true
            regexp: ^(\s*bind-address\s*=\s*)\d+(\.\d+){3}
            line: \g<1>0.0.0.0
          register: mariadb_config_bind_addr

        - name: Restart MariaDB server
          when: mariadb_config_bind_addr.changed
          service: name=mariadb state=restarted

    - name: Check if already installed
      stat: path=/var/www/nextcloud get_checksum=false get_mime=false
      register: nextcloud_dir

    - name: Downloads
      vars:
        archive_url: https://download.nextcloud.com/server/releases/latest.tar.bz2
      when: nextcloud_dir.stat.exists == false
      block:

        - name: Download archive
          get_url:
            url: "{{ archive_url }}"
            dest: /tmp/nextcloud.tar.bz2
            checksum: "sha256:{{ archive_url }}.sha256"

        - name: Download Nextcloud's PGP key
          get_url:
            url: https://nextcloud.com/nextcloud.asc
            dest: /tmp/nextcloud.asc

        - name: Download archive PGP signature
          get_url:
            url: "{{ archive_url }}.asc"
            dest: /tmp/nextcloud.tar.bz2.asc

        - name: Import Nextcloud's PGP key
          command: gpg --import /tmp/nextcloud.asc

        - name: Verify archive's PGP signature
          command: gpg --verify /tmp/nextcloud.tar.bz2.asc /tmp/nextcloud.tar.bz2

        - name: Extract archive
          unarchive:
            remote_src: yes
            src: /tmp/nextcloud.tar.bz2
            dest: /var/www
            creates: /var/www/nextcloud
            owner: www-data
            group: www-data

        - name: Cleanup downloads
          file: state=absent path='/tmp/{{ item }}'
          loop:
            - nextcloud.tar.bz2
            - nextcloud.tar.bz2.asc
            - nextcloud.asc

    - name: Install site config
      template: src=nextcloud.conf.j2 dest='/etc/nginx/sites-available/{{ nextcloud_domain_name }}'

    - name: Enable site config
      file:
        state: link
        path: '/etc/nginx/sites-enabled/{{ nextcloud_domain_name }}'
        src: '../sites-available/{{ nextcloud_domain_name }}'
      notify: reload nginx

    - name: Copy MariaDB config
      copy: src=60-nextcloud.cnf dest=/etc/mysql/mariadb.conf.d/60-nextcloud.cnf

    - name: Check if database exists
      command: mysql -sse "SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = '{{ nextcloud_db }}'"
      register: db_exists
      changed_when: false

    - name: Create database
      when: db_exists.stdout == '0'
      command: mysql -e "CREATE DATABASE `{{ nextcloud_db }}` CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci"

    - name: Check if database user exists
      command: mysql -sse "SELECT COUNT(*) FROM mysql.user WHERE User = '{{ nextcloud_db_user }}'"
      register: db_user_exists
      changed_when: false

    - name: Create database user & grant privileges
      when: db_user_exists.stdout == '0'
      command: mysql -e "
        GRANT ALL PRIVILEGES ON `{{ nextcloud_db }}`.* TO '{{ nextcloud_db_user }}'@'%' IDENTIFIED BY '{{ nextcloud_db_pass }}';
        FLUSH PRIVILEGES;
        "

    - name: Get installation status
      become_user: www-data
      command: php /var/www/nextcloud/occ --help
      changed_when: false
      register: nc_install_status

    - name: Install
      when: nc_install_status.stderr.startswith('Nextcloud is not installed')
      become_user: www-data
      command: php /var/www/nextcloud/occ maintenance:install --database mysql --database-name '{{ nextcloud_db }}' --database-user '{{ nextcloud_db_user }}' --database-pass '{{ nextcloud_db_pass }}' --admin-user '{{ nextcloud_admin_user }}' --admin-pass '{{ nextcloud_admin_pass }}'

    - name: Add trusted domain to config
      lineinfile:
        path: /var/www/nextcloud/config/config.php
        insertafter: "0 => 'localhost',"
        line: "    1 => '{{ nextcloud_domain_name }}',"

    - name: Fix url rewrite in config
      lineinfile:
        path: /var/www/nextcloud/config/config.php
        regexp: "  'overwrite\\.cli\\.url' => 'http://localhost',"
        line: "  'overwrite.cli.url' => 'https://{{ nextcloud_domain_name }}',"
      notify: update nextcloud htaccess

    - name: Add htaccess RewriteBase to config
      lineinfile:
        path: /var/www/nextcloud/config/config.php
        insertafter: 'overwrite.cli.url'
        line: "  'htaccess.RewriteBase' => '/',"
      notify: update nextcloud htaccess

    - name: Enable MySQL utf8mb4 charset in config
      lineinfile:
        path: /var/www/nextcloud/config/config.php
        insertafter: 'dbpassword'
        line: "  'mysql.utf8mb4' => true,"

    - name: Cleanup Nextcloud files
      file:
        path: "/var/www/nextcloud/data/{{ nextcloud_admin_user }}/files/{{ item }}"
        state: absent
      loop:
        - Nextcloud intro.mp4
        - Nextcloud.png
        - Documents/Example.md
        - Documents/Example.odt
        - Documents/Nextcloud flyer.pdf
        - Documents/Readme.md
        - Photos
      notify: reindex nextcloud files
