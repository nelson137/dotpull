- become: true
  vars:
    firefly_dir: /var/www/firefly-iii
    firefly_env_path: '{{ firefly_dir }}/.env'
    composer_installer_path: /tmp/composer-setup.php
    composer_path: /usr/local/bin/composer
  block:

    - name: Add Ondrej's PHP PPA
      apt_repository: repo='ppa:ondrej/php'

    - name: Install dependencies
      apt:
        state: latest
        name:
          - jq
          - mariadb-server
          - software-properties-common
          - php8.2
          - php8.2-bcmath
          - php8.2-cli
          - php8.2-common
          - php8.2-curl
          - php8.2-fpm
          - php8.2-gd
          - php8.2-imap
          - php8.2-intl
          - php8.2-ldap
          - php8.2-mbstring
          - php8.2-mysql
          - php8.2-xml
          - php8.2-zip
          - unzip

    #- name: Configure PHP
    #  line:
    #    path: /etc/php/php8.2/cli/php.ini
    #    line: TODO
    #  # 's/max_execution_time = 30/max_execution_time = 600/'
    #  # 's/memory_limit = 128M/memory_limit = 1G/'
    #  # 's/upload_max_filesize = 2M/upload_max_filesize = 64M/'
    #  # 's/expose_php = On/expose_php = Off/'
    #  # 's/post_max_size = 8M/post_max_size = 64M/'

    - name: Create working directory
      file: path='{{ firefly_dir }}' state=directory

    - name: Get latest version
      command: curl -sS https://api.github.com/repos/firefly-iii/firefly-iii/releases/latest
      register: firefly_releases
      changed_when: false

    - vars:
        firefly_release: "{{ (firefly_releases.stdout | from_json).tag_name }}"
      block:

        - name: Download and extract Firefly
          unarchive:
            remote_src: true
            src: 'https://codeload.github.com/firefly-iii/firefly-iii/tar.gz/refs/tags/{{ firefly_release }}'
            dest: '{{ firefly_dir }}'
            extra_opts:
              - --strip-components=1

    - name: Install environment file
      vars:
        firefly_app_key: '{{ lookup("random_string", length=32, special=False) }}'
      template: src=env.j2 dest='{{ firefly_env_path }}' force=false

    - name: Check if composer is already setup
      stat: path='{{ firefly_dir }}/vendor' get_checksum=false get_mime=false
      register: composer_installation

    - when: composer_installation.stat.exists == false
      block:

        - name: Download PHP Composer installer
          get_url:
            url: https://getcomposer.org/installer
            dest: '{{ composer_installer_path }}'
            checksum: sha384:https://composer.github.io/installer.sig

        - name: Run PHP Composer installer
          command:
            cmd: "php8.2 '{{ composer_installer_path }}' -- --install-dir=/usr/local/bin --filename=composer"
            creates: '{{ composer_path }}'

        - name: Composer install
          shell:
            cmd: 'COMPOSER_ALLOW_SUPERUSER=1 {{ composer_path }} install --prefer-dist --no-dev --no-scripts'
            chdir: '{{ firefly_dir }}'
            creates: '{{ firefly_dir }}/vendor'

        - name: Composer dump autoload
          shell:
            cmd: 'COMPOSER_ALLOW_SUPERUSER=1 {{ composer_path }} dump-autoload'
            chdir: '{{ firefly_dir }}'

    - name: Check if database exists
      command: mysql -sse "SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = '{{ firefly_db_database }}'"
      register: db_exists
      changed_when: false

    - name: Create database
      when: db_exists.stdout == '0'
      command: mysql -e 'CREATE DATABASE `{{ firefly_db_database }}` CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci'

    - name: Check if user exists
      command: mysql -sse "SELECT COUNT(*) FROM mysql.user WHERE User = '{{ firefly_db_username }}'"
      register: db_user_exists
      changed_when: false

    - name: Create user
      when: db_user_exists.stdout == '0'
      command: mysql -e "
        CREATE USER '{{ firefly_db_username }}'@'localhost' IDENTIFIED BY '{{ firefly_db_password }}';
        GRANT ALL PRIVILEGES ON {{ firefly_db_database }}.* TO '{{ firefly_db_username }}'@'localhost' IDENTIFIED BY '{{ firefly_db_password }}';
        FLUSH PRIVILEGES;
        "

    - name: Setup
      command:
        cmd: 'php8.2 artisan {{ item }}'
        chdir: '{{ firefly_dir }}'
      loop:
        - package:discover
        - firefly-iii:upgrade-database
        - firefly-iii:correct-database
        - firefly-iii:report-integrity
        - passport:install

    - name: Copy Nginx server config
      template: src=finance.conf.j2 dest='/etc/nginx/sites-available/{{ firefly_domain_name }}'

    - name: Enable Nginx server config
      file:
        state: link
        path: '/etc/nginx/sites-enabled/{{ firefly_domain_name }}'
        src: '../sites-available/{{ firefly_domain_name }}'
      notify: reload nginx
